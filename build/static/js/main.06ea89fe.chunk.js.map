{"version":3,"sources":["components/Modal.js","App.js","index.js"],"names":["CustomModal","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","id","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","App","refreshlist","axios","get","then","res","todoList","data","catch","err","console","log","modal","handleSubmit","item","put","post","handleDelete","delete","createItem","editItem","displayCompleted","status","viewCompleted","renderTabList","className","renderItems","filter","map","Key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06ea89fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalFooter,\n    Form,\n    formGroup,\n    Input,\n    Label,\n    ModalBody,\n    FormGroup,\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component{\n    constructor(props){\n    super(props);\n    this.state = {\n        activeItem: this.props.activeItem,\n    };\n  }\n\n  handleChange = (e) => {\n      let { name, value} = e.target;\n\n      if (e.target.type === \"checkbox\"){\n          value = e.target.checked;\n      }\n\n      const activeItem = { ...this.state.activeItem, [name]: value};\n\n      this.setState({ activeItem });\n  };\n\n  render() {\n      const { toggle, onSave } = this.props;\n      return (\n          <Modal isOpen={true} toggle={toggle}>\n              <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\n              <ModalBody>\n                  <Form>\n                      <FormGroup>\n                          <Label for='todo-title'>Title</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"todo-title\"\n                            name='title'\n                            value={this.state.activeItem.title}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter Todo Title\"\n                            />\n                      </FormGroup>\n                      <FormGroup>\n                            <Label for=\"todo-description\">Description</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-description\"\n                                name=\"description\"\n                                value={this.state.activeItem.description}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo description\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                type=\"checkbox\"\n                                name=\"completed\"\n                                checked={this.state.activeItem.completed}\n                                onChange={this.handleChange}\n                                />\n                                Completed\n                            </Label>\n                        </FormGroup>\n                  </Form>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                    color=\"succes\"\n                    onClick={() => onSave(this.state.activeItem)}\n                    >\n                        Save\n                    </Button>\n                </ModalFooter>\n          </Modal>\n      )\n  }\n\n}","import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\n// const todoItems = [\n//   {\n//     id: 1,\n//     title: \"Go to Market\",\n//     description: \"Buy ingredients to prepare dinner\",\n//     completed: true,\n//   },\n//   {\n//     id: 2,\n//     title: \"Study\",\n//     description: \"Read Algebra and History textbook for the upcoming test\",\n//     completed: false,\n//   },\n//   {\n//     id: 3,\n//     title: \"Sammy's books\",\n//     description: \"Go to library to return Sammy's books\",\n//     completed: true,\n//   },\n//   {\n//     id: 4,\n//     title: \"Article\",\n//     description: \"Write article on how to use Django with React\",\n//     completed: false,\n//   },\n// ];\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: [],\n      Modal: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n  }\n  \n  componentDidMount(){\n    this.refreshlist();\n  };\n\n  refreshlist = () => {\n    axios\n    .get(\"/api/todos/\")\n    .then((res) => this.setState({ todoList: res.data}))\n    .catch((err) => console.log(err));\n  };\n\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal});\n  };\n\n  handleSubmit = (item) => {\n    this.toggle();\n    if (item.id){\n      axios\n      .put(`/api/todos/${item.id}/`, item)\n      .then((res) => this.refreshlist())\n      return;\n    }\n    axios\n    .post(\"/api/todos/\", item)\n    .then((res) => this.refreshlist());\n  };\n\n  handleDelete = (item) => {\n    axios\n    .delete(`/api/todos/${item.id}/`, item)\n    .then((res) => this.refreshlist());\n  };\n\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false};\n    this.setState({ activeItem: item, modal: !this.state.modal});\n  };\n\n  editItem = (item) => {\n    this.setState({activeItem: item, modal: !this.state.modal});\n  };\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return(\n      <div className=\"nav nav-pills\">\n          <span\n            className={this.state.viewCompleted ? \"nav-link active\": \"nav-link\"}\n            onClick={() => this.displayCompleted(true)}\n            >\n              Complete\n            </span>\n            <span\n              className = {this.state.viewCompleted ? \"nav-link\": \"nav-link active\"}\n              onClick={() => this.displayCompleted(false)}\n              >\n                Incomplete\n              </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      (item) => item.completed == viewCompleted\n    );\n\n    return newItems.map((item) => (\n      <li\n          Key = {item.id}\n          className=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            <span\n              className={`todo-title mr-2 ${\n                this.state.viewCompleted ? \"completed-todo\" : \"\"\n              }`}\n              title={item.description}\n              >\n                {item.title}\n              </span>\n              <span>\n                  <button className=\"btn btn-secondary mr-2\"\n                  onClick={() => this.editItem(item)}\n                  >\n                    Edit\n                  </button>\n                  <button className=\"btn btn-danger\"\n                  onClick={() => this.handleDelete(item)}>\n                    Delete\n                  </button>\n              </span>\n          </li>\n    ));\n  };\n\n  render(){\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-white text-uppercase texte-center my-4\">\n          Todo app\n        </h1>\n        <div className=\"row\">\n            <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n               <div className=\"card p-3\">\n                   <div className=\"mb-4\">\n                      <button className=\"btn btn-primary\"\n                      onClick={this.createItem}>\n                        Add task\n                      </button>\n                   </div>\n                   {this.renderTabList()}\n                   <ul className=\"list-group list-group-flush border-top-0\">\n                      {this.renderItems()}\n                   </ul>\n               </div>\n            </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n          activeItem={this.state.activeItem}\n          toggle={this.toggle}\n          onSave={this.handleSubmit}\n          /> \n        ) : null}\n      </main>\n    );\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}